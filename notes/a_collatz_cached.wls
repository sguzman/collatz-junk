#!/usr/bin/env wolframscript
(* ::Package:: *)

(* ::Input:: *)
(*Block[{},*)
(*$RecursionLimit=Infinity;*)
(**)
(*collatz[1]=1;*)
(*collatz[n_Integer/;And[n>1,OddQ[n]]]:=collatz[n]=3 n+1;collatz[n_Integer/;And[n>1,EvenQ[n]]]:=collatz[n]=n/2;*)
(**)
(*even[n_Integer/;And[n>1,EvenQ[n]]]:=n/2;*)
(*odd[n_Integer/;And[n>1,OddQ[n]]]:=3 n+1;*)
(**)
(*collatzseq[1]={1};collatzseq[n_Integer/;n>1]:=collatzseq[n]={n,Splice@collatzseq@collatz@n};*)
(*collatzseq[93571393692802302];*)
(**)
(*map[n_Integer/;OddQ[n]]=o;*)
(*map[n_Integer/;EvenQ[n]]=e;*)
(**)
(*c=Map[map,collatzseq[93571393692802302]];*)
(**)
(*seqrules={*)
(*{e,o,e,o,e}:>\[Alpha],*)
(*{e,o,e}:>\[Beta],*)
(*{\[Alpha],o}:>\[Gamma],*)
(*{e,e}:>\[Delta],*)
(*{\[Beta],\[Beta]}:>\[Zeta],*)
(*{e,\[Gamma]}:>A,*)
(*{e,\[Alpha]}:>B,*)
(*{e,\[Beta]}:>F,*)
(*{e,\[Zeta]}:>G,*)
(*{\[Delta],e,o}:>T*)
(*};*)
(*oseqrules={*)
(*{e,o,e,o,e}:>\[Alpha],*)
(*{e,o,e}:>\[Beta],*)
(*{\[Alpha],o}:>\[Gamma]*)
(*};*)
(**)
(*seqfuncs=Apply[RightComposition,Map[SequenceReplace,seqrules]];oseqfuncs=Apply[RightComposition,Map[SequenceReplace,oseqrules]];*)
(**)
(*party[c_,i_]:=party[c,i]=Partition[c,i,1];*)
(*spliced[c_]:=*)
(*spliced[c]=*)
(*Table[*)
(*Splice@*)
(*party[c,i],*)
(*{i,2,Length@c/2,1}*)
(*];*)
(**)
(*tallied[c_]:=*)
(*tallied[c]=*)
(*Tally@spliced[c];*)
(**)
(*data[a_]:=*)
(*data[a]={*)
(*First@a,*)
(*Last@a,*)
(*Length@First@a Last@a,*)
(*(Length@First@a-1) Last@a*)
(*};*)
(**)
(*filter[item_]:=*)
(*filter[item]=*)
(*And[*)
(*Length@*)
(*First@item!=1,*)
(*Extract[item,2]!=1*)
(*];*)
(**)
(*select[c_]:=select[c]=Select[Map[data,tallied[c]],filter];*)
(*largest[c_]:=*)
(*largest[c]=*)
(*TakeLargestBy[*)
(*select[c],*)
(*Last,15];*)
(**)
(*With[{c=c},*)
(*Grid@*)
(*Prepend[*)
(*largest[c],*)
(*{"Lexeme","Frequency","Freq * Length","(Length - 1)* Freq"}*)
(*]*)
(*]*)
(*]*)
